{"version":3,"sources":["redux/todolist.redux.js","reducer.js","components/addItem.js","components/sider.js","components/itemContnet.js","components/dashboard.js","components/edit.js","serviceWorker.js","index.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","SELECT_ITEM","CHANGE_ITEM_STATUS","initState","items","currentItem","combineReducers","todolist","state","arguments","length","undefined","action","type","Object","objectSpread2","payload","data","status","AddItem","connect","addItemToList","item","dispatch","axios","post","then","res","code","catch","error","console","log","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputValue","handleChange","bind","assertThisInitialized","handleClick","e","setState","target","value","getItemList","time","Date","toLocaleString","title","content","_this2","_react_16_12_0_react_default","a","createElement","row","col","span","input","onChange","es_button","onClick","React","Component","SubMenu","Menu","SiderItems","selectCurrentItem","handleItemClick","todoitems","filter","v","doneitems","layout","Sider","width","style","background","menu","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","icon","map","Item","_id","ItemContent","changeItemStatus","err","deleteItem","padding","Header","Content","margin","minHeight","TodoList","getTodoList","get","response","className","history","push","components_addItem","sider","itemContnet","EditPage","goBack","Boolean","window","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","_react_redux_7_1_3_react_redux_es","react_router_dom","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e874175.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst GET_ITEMS = 'GET_ITEMS'\nconst ADD_ITEM = 'ADD_ITEM'\nconst DELETE_ITEM = 'DELETE_ITEM'\nconst SELECT_ITEM = 'SELECT_ITEM'\nconst CHANGE_ITEM_STATUS = 'CHANGE_ITEM_STATUS'\n\nconst initState = {\n    items:[],\n    currentItem:{}\n}\n\nexport function todolist(state=initState, action){\n    switch(action.type){\n        case GET_ITEMS:\n        case ADD_ITEM:\n            return {...state,items:action.payload}\n        case CHANGE_ITEM_STATUS:\n            return {...state,\n                items:action.payload.data,\n                currentItem:{...action.payload.currentItem,status:action.payload.status}\n            }\n        case DELETE_ITEM:\n            return {...state,items:action.payload,currentItem:{}}\n        case SELECT_ITEM:\n            return {...state,currentItem:action.payload}\n        default:\n            return state\n    }\n}\n\nfunction getItems(data){\n    return {type:'GET_ITEMS', payload:data}\n}\n\nfunction addItem(data){\n    return {type:'ADD_ITEM', payload:data}\n}\n\nfunction deleteItemAction(data){\n    return {type:'DELETE_ITEM', payload:data}\n}\n\nfunction selectItem(data){\n    return {type:'SELECT_ITEM', payload:data}\n}\n\nfunction changeStatus(data){\n    return {type:'CHANGE_ITEM_STATUS', payload:data}\n}\n\nexport function getTodoList(){\n    return dispatch=>{\n        axios.get('/todolist/allitems')\n            .then(function(response){\n                if(response.status === 200 && response.data.code === 0){\n                    dispatch(getItems(response.data.data.length>0?response.data.data:[]))\n                }\n            })\n    }\n}\n\nexport function addItemToList(item){\n    return dispatch=>{\n        axios.post('/todolist/additem', item)\n              .then(function (res) {\n                if(res.status===200 && res.data.code===0){\n                    dispatch(addItem(res.data.data.length>0?res.data.data:[]))\n                }\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n    }\n}\n\nexport function selectCurrentItem(currentItem){\n    return dispatch=>{\n        dispatch(selectItem(currentItem))\n    }\n}\n\nexport function changeItemStatus(currentItem){\n    return dispatch=>{\n        axios.post('/todolist/updateitem',{\"_id\":currentItem._id,\"status\":currentItem.status})\n            .then(function(res){\n                if(res.status===200 && res.data.code===0){\n                    dispatch(changeStatus({\n                            data:res.data.data||[],\n                            currentItem:currentItem,\n                            status:currentItem.status==='todo'?'done':'todo'\n                        })\n                    )\n                }\n            })\n            .catch(function(err){\n                console.log(err)\n            })\n    }\n}\n\nexport function deleteItem(currentItem){\n    return dispatch=>{\n        axios.post('/todolist/deleteitem',{\"_id\":currentItem._id})\n        .then(function(res){\n            if(res.status===200 && res.data.code===0){\n                dispatch(deleteItemAction(res.data.data||[]))\n            }\n        })\n        .catch(function(err){\n            console.log(err)\n        })\n    }\n}","import { combineReducers } from 'redux'\nimport { todolist } from './redux/todolist.redux'\n\nexport default combineReducers({ todolist })","import React from 'react'\nimport axios from 'axios'\nimport { Button, Input, Row, Col } from 'antd'\nimport { connect } from 'react-redux'\n\nimport { addItemToList } from '../redux/todolist.redux'\n\n@connect(\n    state=>state.todolist,\n    {addItemToList}\n)\nclass AddItem extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            inputValue:''\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleChange(e){\n        this.setState({\n            inputValue:e.target.value\n        })\n    }\n\n    handleClick(getItemList){\n        const inputValue = this.state.inputValue;\n        this.setState({\n            inputValue:''\n        })\n        if(inputValue.length>0){\n            const item = {\n                time: (new Date()).toLocaleString(),\n                title:inputValue,\n                content:'请输入便签内容',\n                status:'todo'\n            }\n\n            this.props.addItemToList(item)\n        }\n    }\n\n    render(){\n        return (\n            <Row>\n                <Col span={2}></Col>\n                <Col span={16}>\n                    <Input type='text' value={this.state.inputValue} onChange={e=>this.handleChange(e)} />\n                </Col>\n                <Col span={4}>\n                    <Button type=\"primary\" onClick={()=>this.handleClick(this.props.getItemList)}>添加待完成事件</Button>\n                </Col>\n                <Col span={2}></Col>\n            </Row>\n        )\n    }\n}\n\nexport default AddItem","import React from 'react'\nimport {Layout, Menu, Icon} from 'antd'\nimport { connect } from 'react-redux'\n\nimport { selectCurrentItem } from '../redux/todolist.redux'\n\nconst { SubMenu } = Menu;\n\n@connect(\n    state=>state.todolist,\n    { selectCurrentItem }\n)\nclass SiderItems extends React.Component{\n    constructor(props){\n        super(props)\n        this.handleItemClick = this.handleItemClick.bind(this)\n    }\n\n    handleItemClick(item){\n        this.props.selectCurrentItem(item)\n    }\n\n    render(){\n        console.log(this.props)\n        const items = this.props.items\n        const todoitems = items.filter(v=>(v.status==='todo'))\n        const doneitems = items.filter(v=>(v.status!=='todo'))\n        \n        return (\n            <Layout.Sider width={200} style={{ background: '#fff' }}>\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['sub1']}\n                    style={{ height: '100%', borderRight: 0 }}\n                >\n                    <SubMenu key=\"todoitems\" title={<span><Icon type=\"laptop\" />待办便签</span>}>\n                        {\n                            todoitems.map(v=>{\n                                return (\n                                    <Menu.Item\n                                        key={v._id}\n                                        onClick = {()=>this.handleItemClick(v)}\n                                    >\n                                        {v.title}\n                                    </Menu.Item>\n                                )\n                            })\n                        }\n                    </SubMenu>\n                    <SubMenu key=\"sub3\" title={<span><Icon type=\"notification\" />已完成便签</span>}>\n                        {\n                            doneitems.map(v=>{\n                                return (\n                                    <Menu.Item\n                                        key={v._id}\n                                        onClick = {()=>this.handleItemClick(v)}\n                                    >\n                                        {v.title}\n                                    </Menu.Item>\n                                )\n                            })\n                        }\n                    </SubMenu>\n                </Menu>\n            </Layout.Sider>\n        )\n    }\n}\n\nexport default SiderItems","import React from 'react'\nimport axios from 'axios'\nimport { Layout, Row, Col, Button } from 'antd'\n\nimport { connect } from 'react-redux'\n\nimport {changeItemStatus,deleteItem} from '../redux/todolist.redux'\n\n@connect(\n    state=>state.todolist,\n    {changeItemStatus,deleteItem}\n)\nclass ItemContent extends React.Component{\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        console.log(this.props)\n        const currentItem = this.props.currentItem\n        return (\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Layout.Header\n                    style={{background: '#f0f2f5', padding: 0}}\n                >\n                    {\n                        currentItem.title?(<Row>\n                            <Col span={18}>\n                                {currentItem.title? currentItem.title : ''}\n                            </Col>\n                            <Col span={3}>\n                                <Button \n                                    onClick={()=>this.props.changeItemStatus(currentItem)}\n                                >{currentItem.status==='todo'? '便签完成':'便签未完成'}</Button>\n                            </Col>\n                            <Col span={3}>\n                                <Button \n                                    onClick={()=>this.props.deleteItem(currentItem)}\n                                >删除便签</Button>\n                            </Col>\n                        </Row>):null\n                    }\n                </Layout.Header>\n                <Layout.Content style={{\n                    background: '#fff', padding: 24, margin: 0, minHeight: 280,\n                    }}\n                >\n                    {!currentItem.content?'请选择一个便签':currentItem.content}\n                </Layout.Content>\n            </Layout>\n        )\n    }\n}\n\nexport default ItemContent","import React from 'react'\nimport { Layout,Button, Row, Col } from 'antd'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nimport AddItem from './addItem'\nimport SiderItems from './sider'\nimport ItemContent from './itemContnet'\n\nimport {getTodoList} from '../redux/todolist.redux'\n\n@connect(\n    state=>state.todolist,\n    {getTodoList}\n)\n\nclass TodoList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            items:[],\n            currentItem:{}\n        }\n\n        this.getItemList = this.getItemList.bind(this)\n    }\n\n    getItemList(){\n        const _this = this\n        axios.get('/todolist/allitems')\n            .then(function(response){\n                if(response.status===200 && response.data.code===0){\n                    _this.setState({\n                        items:response.data.data.length>0?response.data.data:[]\n                    })\n                }\n            })\n            .catch(function(err){\n                console.log(err)\n            })\n    }\n\n    componentDidMount(){\n        this.props.getTodoList()\n    }\n\n    render(){\n        return <Layout>\n        <Layout.Header className=\"header\">\n            <Row>\n                <Col span={2}>\n                    <Button \n                        onClick={()=>this.props.history.push('/edit')}\n                    >编辑页面</Button>\n                </Col>\n                <Col span={22}>\n                    <AddItem></AddItem>\n                </Col>\n            </Row>\n        </Layout.Header>\n        <Layout>\n            <SiderItems></SiderItems>\n            <ItemContent></ItemContent>\n        </Layout>\n    </Layout>\n    }\n}\n\nexport default TodoList","import React from 'react'\nimport { Button } from 'antd'\n\nclass EditPage extends React.Component{\n\n    render(){\n        return (\n            <div>\n                <h1>这是编辑页面</h1>\n                <Button \n                    onClick={()=>this.props.history.goBack()}\n                >返回</Button>\n            </div>\n        )\n    }\n}\n\nexport default EditPage","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter, Route, Redirect, Switch} from 'react-router-dom'\n\nimport reducers from './reducer'\n\nimport './index.css';\nimport TodoList from './components/dashboard'\nimport EditPage from './components/edit'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(thunk)\n);\n\nReactDOM.render(\n    (<Provider store={store}>\n        <BrowserRouter>\n            <Route path='/' exact component={TodoList}></Route>\n            <Route path='/edit' component={EditPage}></Route>\n        </BrowserRouter>\n    </Provider>),\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}